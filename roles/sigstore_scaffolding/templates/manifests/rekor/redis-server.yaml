apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/instance: scaffold
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rekor
    helm.sh/chart: rekor-1.0.3
  name: rekor-redis
  namespace: rekor-system
spec:
  containers:
    - args:
        - --bind
        - 0.0.0.0
        - --appendonly
        - "yes"
      image: {{ redis_image }}
      imagePullPolicy: IfNotPresent
      name: rekor-redis
      ports:
        - containerPort: 6379
          protocol: TCP
      readinessProbe:
        exec:
          command:
            - /usr/bin/run-redis
            - --bind
            - 0.0.0.0
            - --appendonly
            - "yes"
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
## TODO: Uncomment once EmptyDir volumes supported
      # volumeMounts:
      #   - mountPath: /data
      #     name: storage
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: rekor-redis
  serviceAccountName: rekor-redis
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
## TODO: Uncomment once EmptyDir volumes supported
  # volumes:
  #   - emptyDir: {}
  #     name: storage

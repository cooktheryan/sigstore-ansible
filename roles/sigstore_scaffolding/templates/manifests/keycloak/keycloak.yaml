apiVersion: v1
kind: Pod
metadata:
  name: keycloak
  namespace: keycloak-system
spec:
  containers:
    - env:
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: keycloak-postgresql
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: keycloak-postgresql
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              key: admin-username
              name: keycloak
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: keycloak
        - name: KC_DB_URL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database
              name: keycloak-postgresql
        - name: KC_HTTP_ENABLED
          value: "true"
        # - name: KC_HTTPS_CERTIFICATE_FILE
        #   value: /certs/ingress-keycloak.pem
        # - name: KC_HTTPS_CERTIFICATE_KEY_FILE
        #   value: /certs/ingress-keycloak.key
        - name: KC_DB
          value: postgres
        - name: KC_DB_URL_HOST
          value: keycloak-postgresql
        - name: KC_DB_URL_PORT
          value: "5432"
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_HOSTNAME_URL
          value: "https://{{ keycloak_url }}"
        - name: KC_HOSTNAME_ADMIN_URL
          value: "https://{{ keycloak_url }}"
      args:
        - start
      image: quay.io/keycloak/keycloak@sha256:b8f2a453a17a244a829fdafdb08dd77f719d3622bc3987c76a81771c0913b882
      imagePullPolicy: IfNotPresent
      # livenessProbe:
      #   exec:
      #     command:
      #       - /etc/init.d/mysql
      #       - status
        # failureThreshold: 3
        # initialDelaySeconds: 30
        # periodSeconds: 10
        # successThreshold: 1
        # timeoutSeconds: 1
      name: keycloak
      ports:
        - containerPort: 8443
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
      # readinessProbe:
      #   exec:
      #     command:
      #       - /etc/init.d/mysql
      #       - status
        # failureThreshold: 3
        # initialDelaySeconds: 10
        # periodSeconds: 10
        # successThreshold: 1
        # timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /certs
          name: keycloak-certs
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: keycloak
  serviceAccountName: keycloak
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - secret:
        secretName: keycloak-certs
      name: keycloak-certs

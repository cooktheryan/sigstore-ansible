---

- name: Obtain Trillian Tree ID
  ansible.builtin.include_tasks: podman/createtree.yml

- name: Slurp ctlog Certificates
  ansible.builtin.slurp:
    src: "{{ item }}"
  loop:
    - "{{ remote_ctlog_private_key }}"
    - "{{ remote_ctlog_public_key }}"
    - "{{ remote_fulcio_root_ca }}"
  register: remote_ctlog_certificates

- name: Create ctlog ConfigMap
  ansible.builtin.copy:
    content: "{{ configmap_content | to_nice_yaml(indent=2) }}"
    dest: "{{ ctlog_secret_config }}"
  vars:
    configmap_content:
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: ctlog-secret
        namespace: ctlog-system
      data:
        config: "{{ lookup('template', 'configs/ctlog-config.j2') }}"
        private: |
          {{ (remote_ctlog_certificates.results | selectattr('source', 'equalto', remote_ctlog_private_key) | list | first).content | b64decode }}
        public: |
          {{ (remote_ctlog_certificates.results | selectattr('source', 'equalto', remote_ctlog_public_key) | list | first).content | b64decode }}
        fulcio-0: |
          {{ (remote_ctlog_certificates.results | selectattr('source', 'equalto', remote_fulcio_root_ca) | list | first).content | b64decode }}

- name: Deploy ctlog Pod
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: "started"
      network: "{{ sigstore_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/ctlog/ctlog.yaml') | from_yaml }}"
      configmap:
        - "{{ ctlog_secret_config }}"
